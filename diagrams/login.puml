@startuml
autonumber "[<b>[000]"
actor User

title: Login Procedure

User -> WebApp: Submit login form


WebApp -> Gateway: \
Send login credentials: \n\
 Content-Type: application/x-www-form-urlencoded \n\
 {\n \
  "email": "dummy@test.com",\n\
  "password": "dummy" \n\
 }

activate Gateway

Gateway -> TokenService: Proxy Request
activate TokenService

TokenService -> UserService: \
Forward login credentials: \n\n\
 Content-Type: application/json \n\
 {\n \
  "email": "dummy@test.com",\n\
  "password": "dummy" \n\
 }
activate UserService

database RedisTokenDatabase

alt Valid credentials
UserService -> TokenService: \
 Content-Type: application/json \n\
 {\n \
  "email": "dummy@test.com",\n\
  "username": "dummy" \n\
  ...profileInfo \n\
 }

deactivate UserService

TokenService -> TokenService: Create JWT

TokenService -> RedisTokenDatabase: \
  Store token
activate RedisTokenDatabase
TokenService <- RedisTokenDatabase:
deactivate RedisTokenDatabase

TokenService -> Gateway: Proxy Response
deactivate TokenService

Gateway -> WebApp: \
 Content-Type: application/json \n\
 Authorization: Bearer <(jwt)token> \n\
 {\n \
  "email": "dummy@test.com",\n\
  "username": "dummy" \n\
  ...profileInfo \n\
 }
deactivate Gateway

WebApp -> User: Authenticated \n\
  Owner of JWT to access services

User -> Gateway: Access Protected Service
activate Gateway

Gateway -> RedisTokenDatabase: Validate Token
activate RedisTokenDatabase

Gateway <- RedisTokenDatabase: Token Validated
deactivate RedisTokenDatabase

Gateway -> ApiService: Authorized Request
activate ApiService

Gateway <- ApiService: Response {...}
deactivate ApiService

Gateway -> WebApp: Response {...}
deactivate Gateway
WebApp -> User: Response {...}

else Failure
UserService -> TokenService: \
 Content-Type: application/json \n\
 {\n \
  ...errorMessage \n\
 }

TokenService -> WebApp: \
 Forward Error Message\n\
 Content-Type: application/json \n\
 {\n \
  ...errorMessage \n\
 }

WebApp -> User: Not Authenticated \n\
  Show error message to user.
end

@enduml
